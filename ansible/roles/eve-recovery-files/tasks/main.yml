---
- name: Create working dir to build packages
  become: true
  file:
    path: "{{ main_workdir }}"
    mode: 0777
    state: directory

- name: Create kernel-config dir to build packages
  become: false
  file:
    path: "{{ kernel_config_dir }}"
    mode: 0777
    state: directory

 #### Copy files from eve recovery image

- name: Download eve recovery image
  get_url:
    url: "https://dl.google.com/dl/edgedl/chromeos/recovery/{{ eve_recovery_image }}.zip"
    dest: "{{ main_workdir }}/eve-recovery.zip"
    checksum: "sha256:{{ eve_recovery_image_sha256 }}"

- name: Check if we've unzipped recovery image
  register: image_unzipped
  stat:
    path: "{{ main_workdir }}/{{ eve_recovery_image }}"

- name: Unzip recovery image
  when: image_unzipped.stat.exists == False
  unarchive:
    src: "{{ main_workdir }}/eve-recovery.zip"
    dest: "{{ main_workdir }}"
    remote_src: yes

- name: Map recovery image to loopback device
  become: true
  command: "kpartx -av {{ main_workdir }}/{{ eve_recovery_image }}"
  register: kpartx_output

- name: Find mapper device to use for mounting image
  set_fact:
    mapper_device: "{{ kpartx_output.stdout | regex_search(regexp, '\\1') | first }}"
  vars:
    regexp: '(loop[0-9]p3)'

- debug:
    msg: "mapper device: {{ mapper_device }}"

- name: Create mount point
  file:
    path: "{{ recovery_mount_point }}"
    state: directory

- name: Mount recovery image
  become: true
  mount:
    path: "{{ recovery_mount_point }}"
    src: "/dev/mapper/{{ mapper_device }}"
    fstype: ext2
    opts: ro
    state: mounted

- name: Ensure /opt/google exists
  become: true
  file:
    path: /opt/google
    state: directory

- name: Copy files from /opt/google on recovery image
  become: true
  command: "rsync -av {{ recovery_mount_point }}/opt/google/{{ item }} /opt/google"
  with_items:
    - dsm
    - kbl-rt5514-hotword-support
    - touch

- name: Copy all firmware files from recovery image to /lib/firmware
  become: true
  command: "rsync -av {{ recovery_mount_point }}/lib/firmware/ /lib/firmware/"

- name: Ensure /usr/share/alsa/ucm exists
  become: true
  file:
    path: /usr/share/alsa/ucm
    state: directory

- name: Copy the alsa UCM configuration for eve's soundcard from recovery image
  become: true
  command: "rsync -av {{ recovery_mount_point }}/usr/share/alsa/ucm/kbl-r5514-5663-max /usr/share/alsa/ucm"


- name: Copy cras souncard config files from recovery image
  become: true
  command: "rsync -av {{ recovery_mount_point }}/etc/cras {{ cras_etc_dir }}"

- name: Copy kernel config files from recovery image
  become: true
  command: "rsync -av {{ recovery_mount_point }}/lib/modules/5.4.109-26092-g9d947a4eeb73/kernel/kernel/configs.ko {{ kernel_config_dir }}/configs.ko"

- name: Copy tplg firmware file
  become: true
  command: "rsync -av {{ recovery_mount_point }}/lib/firmware/9d71-GOOGLE-EVEMAX-0-tplg.bin /lib/firmware/"

- name: Copy dsp firmware file
  become: true
  command: "rsync -av {{ recovery_mount_point }}/lib/firmware/dsp_lib_dsm_core_spt_release.bin /lib/firmware/"

- name: Copy intel firmware file
  become: true
  command: "rsync -av {{ recovery_mount_point }}/lib/firmware/intel/dsp_fw_C75061F3-F2B2-4DCC-8F9F-82ABB4131E66.bin /lib/firmware/intel"

- name: Setup pipewire
  become: true
  command: "sudo dnf swap --allowerasing pipewire-pulseaudio pulseaudio -y"

- name: Unmount recovery image
  become: true
  mount:
    path: "{{ recovery_mount_point }}"
    state: absent
